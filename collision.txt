#include <stdio.h>
#include <string.h>
#include <stdint.h>
unsigned long hashcode = 0x21DD09EC;

unsigned long check_password(const char* p){
	int* ip = (int*)p;
	int i;
	int risultato=0x0;
	for(i=0; i<5; i++){
		
		risultato += ip[i];
		printf("%x - %x\n",ip[i],risultato);
	}
	return risultato;
}

int main(int argc, char* argv[]){

	argv[1]="}0}0}0}0}9sQ<6669999";

	if(strlen(argv[1]) != 20){
		printf("passcode length should be 20 bytes\n");
		return 0;
	}


	printf("%x\n%x\n",hashcode,check_password(argv[1]));	
if(hashcode == check_password( argv[1] )){
		system("/bin/cat flag");
		return 0;
	}
	else
		printf("wrong passcode.\n");
	
	return 0;
}

Bisogna fargli fare overflow sommando a chunk di 4 (5 chunk da 4 char cad. ). 
Con 00000000000066669999 si arriva a ffffffff
Con 10000000000066669999 si arriva a 0
(Nell'input servono gli apici altrimenti bash interpreta il carattere "<" )

-----------------------------------------------------------------
| input: | "}0}0}0}0}9sQ<6669999" 			        |
|--------|------------------------------------------------------|
| flag:  | daddy! I just managed to create a hash collision :)  |
-----------------------------------------------------------------
